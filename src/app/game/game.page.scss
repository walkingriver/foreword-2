// All rules regardless of orientation
.table-top {
  display: grid;
  column-gap: 10px;
  row-gap: 10px;
  padding-top: 10px;
  box-sizing: border-box;
}

.game-board {
  display: block;
}

// For Landscape orientation
@media screen and (orientation: landscape) {
  .table-top {
    justify-content: space-evenly;
    grid-template-rows: 1fr;
  }

  @media screen and (max-height: 450px) {
    .table-top {
      grid-template-columns: repeat(2, 77vh);
    }
  }
  @media screen and (min-height: 451px) {
    .table-top {
      grid-template-columns: 3fr 2fr;
    }
  }

  .shelf-container {
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    grid-template-rows: repeat(4, 1fr);
  }

  .shelf {
    display: block;
    max-width: 50%;
    max-height: 75vh;
  }

  .grid-container {
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    grid-template-rows: repeat(4, 1fr);
  }
}

// For portrait orientation
@media screen and (orientation: portrait) {
  .table-top {
    grid-template-rows: 3fr 1fr;
    justify-content: space-evenly;
  }

  .shelf-container {
    display: grid;
    grid-template-columns: repeat(8, 1fr);
    grid-template-rows: repeat(2, 1fr);
  }


  .grid-container {
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    grid-template-rows: repeat(4, 1fr);
  }

  .flex-cell {
    padding: 2px;
  }
}

.flex-cell {
  box-sizing: border-box;
}

.tile {
  flex-shrink: 1;
  display: block;
}

.tile-image {
  width: 100%; // height: 90%;
}

.tiles {
  display: flex;
  flex-flow: row wrap;
}
